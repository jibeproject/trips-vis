---
title: "Mode share visualisation"
author: "Ali and Marina"
format: html
editor: source
---

## Setup
```{r}
require(tidyverse)
require(sf)
require(gt)
require(ggplot2)
require(dplyr)
require(stringr)

# Change the path as needed, currently set to Manchester folder

zone <- st_read("synpop/sp_2021/OA_2021_MCR.shp")

trips_ref <- read.csv("simulationResults/ForUrbanTransition/reference/travel_demand_mito/trips.csv")

trips_cint <- read.csv("simulationResults/ForUrbanTransition/cycleIntervention/travel_demand_mito/trips.csv")

pp <- read.csv("synpop/sp_2021/pp_2021.csv")
```

## Data Preparation

```{r}

################### Adding Zone and Demographics ########################

trips_ref <- trips_ref %>% 
  mutate(scenario = "Reference")

trips_cint <- trips_cint %>% 
  mutate(scenario = "Cycling intervention")

trips <- bind_rows(trips_ref, trips_cint)

################### Adding Zone and Demographics ########################

trips <- trips %>% 
  left_join(zone %>% 
              select(location_origin = LSOA21NM,id) %>% 
              st_drop_geometry(),
            by = c("origin" = "id")) %>% 
  left_join(zone %>% 
              select(location_destination = LSOA21NM,id) %>% 
              st_drop_geometry(),
            by = c("destination" = "id")) %>% 
  left_join(pp, by = c("p.ID" = "id")) %>% 
  mutate(location_origin = word(location_origin, 1),
         location_destination = word(location_destination, 1),
         gender = factor(gender,
                         levels = c(1,2),
                         labels = c("Male","Female")),
         occupation = factor(occupation,
                             levels = c(0, 1, 2, 3, 4),
                             labels = c("Toddler", "Employed", "Unemployed", "Student", "Retiree")),
         distance = case_when(
             mode %in% c("autoDriver", "autoPassenger", "pt") ~ t.distance_auto,
             mode == "walk" ~ t.distance_walk,
             mode == "bicycle" ~ t.distance_bike,
             TRUE ~ NA_real_),
         mode = case_when(
           mode == "autoDriver" ~ "Driving Car",
           mode == "autoPassenger" ~ "Car Passenger",
           mode == "pt" ~ "Public Transport",
           mode == "walk" ~ "Walking",
           mode == "bicycle" ~ "Cycling",
           TRUE ~ "Other"),
         t.purpose = case_when(
             t.purpose == "HBW" ~ "Home-based-work",
             t.purpose == "HBE" ~ "Home-based-education",
             t.purpose == "HBA" ~ "Home-based-accompanying",
             t.purpose == "HBS" ~ "Home-based-shopping",
             t.purpose == "HBR" ~ "Home-based-recreation",
             t.purpose == "HBO" ~ "Home-based-other",
             t.purpose == "NHBO" ~ "Non-home-based-other",
             t.purpose == "NHBW" ~ "Non-home-based-work",
             TRUE ~ NA_character_),
         mode = factor(mode, levels = c("Driving Car", 
                                        "Car Passenger", 
                                        "Public Transport", 
                                        "Walking", 
                                        "Cycling", 
                                        "Other")),
         t.purpose = factor(t.purpose, levels = c("Home-based-work", 
                                                  "Home-based-education", 
                                                  "Home-based-accompanying", 
                                                  "Home-based-shopping", 
                                                  "Home-based-recreation", 
                                                  "Home-based-other", 
                                                  "Non-home-based-other", 
                                                  "Non-home-based-work")),
         time_walk = t.distance_walk/2.92,
         time_bike = t.distance_bike/10.44) %>% 
  select(-schoolId, -workplace)

```

## Creating Visualizations

### Table of the number of trips in each local authority in Greater Manchester

```{r}
# Table of the number of trips in each local authority in Greater Manchester

trip_counts <- trips %>%
  select(t.id, location_origin, location_destination) %>%
  pivot_longer(cols = c(location_origin, location_destination),
               names_to = "type",
               values_to = "location") %>%
  group_by(location) %>%
  summarise(trip_count = n()) %>% 
  ungroup() %>% 
  mutate(percent_of_total = (trip_count / sum(trip_count)))

trip_counts %>%
  arrange(desc(trip_count)) %>% 
  gt() %>%
  tab_header(
    title = "Trips by Location",
    subtitle = "Sum of trips within each Local Authority District"
  ) %>%
  cols_label(
    location = "Location",
    trip_count = "Count",
    percent_of_total = "Percent of Total"
  ) %>% 
  fmt_percent(
    columns = percent_of_total,
    decimals = 1)

# Trips by various demographic characteristics

total_trips <- nrow(trips)

# Distribution of trips by mode and scenarios 

ggplot(trips, aes(x = mode, fill = scenario)) +
  geom_bar(aes(y = after_stat(count) / total_trips * 100), 
           position = "dodge", 
           stat = "count") + 
  geom_text(stat = "count", 
            aes(y = after_stat(count) / total_trips * 100, 
                label = paste0(round(after_stat(count) / total_trips * 100, 1), "%")),
            position = position_dodge(width = 0.9), 
            vjust = -0.25) + 
  labs(title = "Mode Distribution",
       y = "Percentage",
       fill = "Scenario") +
#  scale_y_continuous(limits = c(0, 50)) +  
  theme_minimal() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        plot.title = element_text(hjust = 0.5))

# Distribution of trips by mode and gender

ggplot(trips, aes(x = mode, fill = gender)) +
  geom_bar(aes(y = after_stat(count) / total_trips * 100), 
           position = "dodge", 
           stat = "count") + 
  geom_text(stat = "count", 
            aes(y = after_stat(count) / total_trips * 100, 
                label = paste0(round(after_stat(count) / total_trips * 100, 1), "%")),
            position = position_dodge(width = 0.9), 
            vjust = -0.25) + 
  labs(title = "Mode Distribution by Gender",
       fill = "Gender") +
  theme_minimal() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        plot.title = element_text(hjust = 0.5))

# By Occupation
ggplot(trips, aes(x = mode, fill = t.purpose)) +
  geom_bar(aes(y = after_stat(count) / total_trips * 100), 
           position = "dodge", 
           stat = "count") + 
  geom_text(stat = "count", 
            aes(y = after_stat(count) / total_trips * 100, 
                label = paste0(round(after_stat(count) / total_trips * 100, 1), "%")),
            position = position_dodge(width = 0.9), 
            vjust = -0.25) + 
  labs(title = "Mode Distribution by Purpose of Trip",
       fill = "Purpose") +
  theme_minimal() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        plot.title = element_text(hjust = 0.5))

# Average weekly distance by mode of transportation

avg_distance <- trips %>%
  group_by(mode, scenario) %>%
  summarize(avg_distance = mean(distance, na.rm = TRUE)) %>%
  ungroup()

ggplot(avg_distance, aes(x = mode, fill = scenario)) +
  geom_bar(aes(y = avg_distance),
           stat = "identity", 
           position = "dodge") +
  geom_text(aes(y = avg_distance, 
                label = round(avg_distance, 1)), 
            position = position_dodge(width = 0.9), 
            vjust = -0.25) +
  labs(title = "Average Weekly Distance by Mode of Transportation",
       x = "Mode of Transportation",
       y = "Average Distance (km)",
       fill = "Scenario") +
  theme_minimal() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.title.x = element_blank(),
        plot.title = element_text(hjust = 0.5))

```

