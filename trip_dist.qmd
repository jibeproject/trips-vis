---
title: "Mode share visualisation"
author: "Ali and Marina"
format:
    html: 
       embed-resources: true
       page-layout: full
editor: source
execute:
  echo: false
  warning: false

---

```{r}
require(tidyverse)
require(sf)
require(gt)
require(ggplot2)
require(dplyr)
require(stringr)
require(arrow)
require(plotly)
require(here)

# Set it to your local directory pointing to the General folder
per_dir_path <- "D:/Users/aa797/RMIT University/"

trips <- trips <- arrow::open_dataset(here(per_dir_path, "JIBE working group - General/manchester/simulationResults/ForUrbanTransition/visualization/trips.parquet"))

```


## Creating Visualizations

### Table of the number of trips in each local authority in Greater Manchester

```{r}
# Table of the number of trips in each local authority in Greater Manchester

trip_counts <- trips %>% to_duckdb() |> 
  select(t.id, LAD_origin, LAD_destination) %>%
  pivot_longer(cols = c(LAD_origin, LAD_destination),
               names_to = "type",
               values_to = "location") %>%
  group_by(location) %>%
  summarise(trip_count = n()) %>% 
  ungroup() %>% 
  mutate(percent_of_total = (trip_count / sum(trip_count)))

trip_counts %>%
  arrange(desc(percent_of_total)) %>%
  select(location, percent_of_total) %>%  # Exclude trip_count column
  gt() %>%
  tab_header(
    title = "Trips by Location",
    subtitle = "Percentage of Trips Within Local Authority Districts"
  ) %>%
  cols_label(
    location = "Location",
    percent_of_total = "% of Total"
  ) %>% 
  fmt_percent(
    columns = percent_of_total,
    decimals = 1)

```

## Trips by Index of Multiple Deprivation (IMD) characteristics

```{r}
# Trips by various demographic characteristics

total_trips <- nrow(trips)

# Distribution of trips by mode and location 

trips_percentage <- trips %>% to_duckdb() |> 
  group_by(LAD_origin, scenario) %>%
  mutate(total_trips = n()) %>%
  ungroup() %>% 
  group_by(LAD_origin, mode, scenario) %>%
  summarise(trip_count = n(), total_trips = first(total_trips), .groups = 'drop') %>%
  mutate(percentage_of_trips = (trip_count / total_trips) * 100) |> collect()

trips_percentage_all <- trips_percentage %>%
  group_by(mode, scenario) %>%
  summarise(trip_count = mean(trip_count),
            total_trips = mean(total_trips),
            percentage_of_trips = (trip_count / total_trips) * 100, .groups = 'drop') %>%
  mutate(LAD_origin = "All Locations")

trips_percentage_combined <- bind_rows(trips_percentage |> collect(), trips_percentage_all |> collect())

ggplotly(ggplot(trips_percentage_combined) +
           aes(x = mode, y = percentage_of_trips, fill = scenario) +
           geom_col(position = "dodge2") +
           geom_text(aes(label = round(percentage_of_trips, 1),
                         y = percentage_of_trips),
                     size = 2, 
                     hjust = 1.1, 
                     vjust = 0.2,
                     position = position_dodge(1),
                     inherit.aes = TRUE
           ) +
           scale_fill_hue(direction = 1) +
           coord_flip() +
           theme_minimal() +
           facet_wrap(vars(LAD_origin)) +
           labs(
             title = "% trips by mode and location",
             fill = "Scenario")
)



# By IMD

trips_percentage_imd <- trips %>% to_duckdb() |> 
  group_by(imd_origin, scenario) %>%
  mutate(total_trips = n()) %>%
  ungroup() %>% 
  group_by(imd_origin, mode, scenario) %>%
  summarise(trip_count = n(), total_trips = first(total_trips), .groups = 'drop') %>%
  mutate(percentage_of_trips = (trip_count / total_trips) * 100) |> collect()

trips_percentage_imd$imd_origin <- as.factor(trips_percentage_imd$imd_origin) 

trips_percentage_all_imd <- trips_percentage_imd %>%
  group_by(mode, scenario) %>%
  summarise(trip_count = mean(trip_count),
            total_trips = mean(total_trips),
            percentage_of_trips = (trip_count / total_trips) * 100, .groups = 'drop') %>%
  mutate(imd_origin = "All IMDs") |> collect()

trips_percentage_combined_imd <- bind_rows(trips_percentage_all_imd,trips_percentage_imd)

trips_percentage_combined_imd$imd <- factor(trips_percentage_combined_imd$imd_origin,
                                            levels = c("All IMDs", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"),
                                            labels = c("All IMDs", "Most Deprived", "2", "3", "4", "5", "6", "7", "8", "9", "Least Deprived"))


ggplotly(
ggplot(trips_percentage_combined_imd, aes(x = mode, y = percentage_of_trips, fill = scenario)) +
  geom_col(position = "dodge2") +
  scale_fill_hue(direction = 1) +
  geom_text(aes(label = round(percentage_of_trips, 1), y = percentage_of_trips),
            size = 2, #hjust = -0.1, 
            hjust = 1.1, 
            vjust = 0.2,
            position = position_dodge(1),
            inherit.aes = TRUE
  ) +
  coord_flip() +
  theme_minimal() +
  facet_wrap(vars(imd)) +
  labs(
    title = "% trips by mode IMD",
    fill = "Scenario")
)
```

# Average weekly distance by mode of transportation
```{r}
pp=trips%>% to_duckdb() |> 
  group_by(p.ID, LAD_origin, scenario)%>%
  summarise(Cycling=sum(t.distance_bike[mode=="Cycling"]),
            Walking=sum(t.distance_walk[mode=="Walking"]),
            `Public Transport`=sum(t.distance_auto[mode=="Public Transport"]),
            `Driving Car`=sum(t.distance_auto[mode=="Driving Car"]),
            `Car Passenger`=sum(t.distance_auto[mode=="Car Passenger"])) |> collect()

pp=pp%>%gather(mode,dist,Cycling:`Car Passenger`)

pop_lad <- trips |> to_duckdb() |> distinct(p.ID, LAD_origin) |> group_by(LAD_origin) |> summarise(pop = n())

tot_pop <- pop_lad |> dplyr::select(pop) |> pull() |> sum()

summary_distance <- pp |>  
  filter(!is.na(dist)) |> 
  left_join(pop_lad, copy = T) |> 
  group_by(mode, LAD_origin, scenario) |> 
  summarise(avgDistance = round(sum(dist) / first(pop), 1))

pp_all=trips%>% to_duckdb() |> 
  group_by(p.ID, scenario)%>%
  summarise(Cycling=sum(t.distance_bike[mode=="Cycling"]),
            Walking=sum(t.distance_walk[mode=="Walking"]),
            `Public Transport`=sum(t.distance_auto[mode=="Public Transport"]),
            `Driving Car`=sum(t.distance_auto[mode=="Driving Car"]),
            `Car Passenger`=sum(t.distance_auto[mode=="Car Passenger"])) |> collect()

pp_all <- pp_all%>%gather(mode,dist,Cycling:`Car Passenger`)

summary_distance_all <- pp_all |> 
    filter(!is.na(dist)) |> 
    group_by(mode, scenario) |>  
    summarise(avgDistance = round(sum(dist, na.rm = T) / tot_pop, 1)) |>  
    mutate(LAD_origin = "All Locations")

combined_distance <- bind_rows(summary_distance,summary_distance_all) 

ggplotly(
  ggplot(combined_distance) +
    aes(x = mode, y = avgDistance, fill = scenario) +
    geom_col(position = "dodge2") +
    scale_fill_hue(direction = 1) +
    geom_text(aes(label = round(avgDistance, 1), y = avgDistance),
              size = 2, #hjust = -0.1, 
              hjust = 1.1, 
              vjust = 0.2,
              position = position_dodge(1),
              inherit.aes = TRUE
    ) +
    coord_flip() +
    theme_minimal() +
    facet_wrap(vars(LAD_origin)) +
    labs(title = "Average weekly dist. pp by mode and location",
         fill = "Scenario")
)

```


# Average time spent per person by mode and location
```{r}

tt= trips %>% to_duckdb() |>
  group_by(p.ID, LAD_origin, scenario)%>%
  summarise(Cycling=sum(time_bike[mode=="Cycling"], na.rm = T),
            Walking=sum(time_walk[mode=="Walking"], na.rm = T),
            `Public Transport`=sum(time_pt[mode=="Public Transport"], na.rm = T),
            `Driving Car`=sum(time_auto[mode=="Driving Car"], na.rm = T),
            `Car Passenger`=sum(time_auto[mode=="Car Passenger"], na.rm = T)) |> collect()

tt=tt%>%gather(mode,time,Cycling:`Car Passenger`)

summary_time=tt%>%
  group_by(mode, LAD_origin, scenario)%>%
  summarise(avgTime=mean(time, na.rm = T))

tt_all=trips%>% to_duckdb() |>
  group_by(p.ID, scenario)%>%
  summarise(Cycling=sum(time_bike[mode=="Cycling"], na.rm = T),
            Walking=sum(time_walk[mode=="Walking"], na.rm = T),
            `Public Transport`=sum(time_pt[mode=="Public Transport"], na.rm = T),
            `Driving Car`=sum(time_auto[mode=="Driving Car"], na.rm = T),
            `Car Passenger`=sum(time_auto[mode=="Car Passenger"], na.rm = T)) |> collect()

tt_all=tt_all%>%gather(mode,time,Cycling:`Car Passenger`)

summary_time_all=tt_all%>%
  group_by(mode, scenario)%>%
  summarise(avgTime=mean(time, na.rm = T)) %>%
  mutate(LAD_origin = "All Locations")

avg_time_combined <- bind_rows(summary_time, summary_time_all)

ggplotly(ggplot(avg_time_combined) +
  aes(x = mode, y = avgTime, fill = scenario) +
  geom_col(position = "dodge2") +
  geom_text(aes(label = round(avgTime, 1),
                y = avgTime),
            size = 2, #hjust = -0.1, 
            hjust = 1.1, 
            vjust = 0.2,
            position = position_dodge(1),
            inherit.aes = TRUE
  ) +
  scale_fill_hue(direction = 1) +
  labs(title = "Average weekly time (in hours) by mode per person and location",
       fill = "Scenario",
       x = "", y = "Hours") +
  coord_flip() +
  theme_minimal() +
  facet_wrap(vars(LAD_origin))
)



```